# Generated by Django 5.2.7 on 2025-10-02 12:51

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=20, unique=True, verbose_name='Device Version')),
            ],
            options={
                'verbose_name': '02. Device Version',
                'verbose_name_plural': '02. Device Versions',
            },
        ),
        migrations.CreateModel(
            name='EspMacId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('esp_mac', models.CharField(max_length=50, unique=True, verbose_name='Device MAC')),
            ],
            options={
                'verbose_name': '01. Device MAC',
                'verbose_name_plural': '01. Device MACs',
            },
        ),
        migrations.CreateModel(
            name='ImageResolutionList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmd_visual', models.CharField(max_length=30, verbose_name='Image resolution')),
                ('cmd', models.IntegerField(default=7, verbose_name='Value')),
                ('active', models.BooleanField(default=False, verbose_name='CMD active status')),
            ],
            options={
                'verbose_name': '04. Photo Resolution',
                'verbose_name_plural': '04. Photo Resolutions',
            },
        ),
        migrations.CreateModel(
            name='DeviceInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dev_sl', models.CharField(max_length=50, unique=True, verbose_name='Device Serial')),
                ('dev_name', models.CharField(max_length=50, verbose_name='Device Name')),
                ('active', models.BooleanField(default=False, verbose_name='Is Device Active')),
                ('dev_active_mode', models.CharField(choices=[('always_on', 'Always ON'), ('always_off', 'Always OFF'), ('schedule', 'Schedule ON-OFF'), ('a_on_m_off', 'Manual OFF - Auto ON')], default='always_on', max_length=30, verbose_name='Device Active Mode')),
                ('dev_active_hour_start', models.TimeField(default=datetime.time(23, 0), verbose_name='Active Hour Start')),
                ('dev_active_hour_end', models.TimeField(default=datetime.time(6, 0), verbose_name='Active Hour End')),
                ('change_pending', models.BooleanField(default=False, verbose_name='Active Mode Change Pending')),
                ('dev_alert_type', models.CharField(choices=[('call', 'Call'), ('sms', 'SMS'), ('email', 'Email'), ('all', 'All'), ('off', 'Off')], default='call', max_length=30, verbose_name='Alert Type')),
                ('alert_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Alert Number')),
                ('alert_email', models.CharField(blank=True, max_length=200, null=True, verbose_name='Alert Email')),
                ('snooze_delay', models.IntegerField(blank=True, default=5, null=True, verbose_name='Snooze Minute')),
                ('busy_status', models.BooleanField(default=False, verbose_name='Device Busy Status')),
                ('remark', models.CharField(blank=True, max_length=300, null=True, verbose_name='Remarks')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dev_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='DeviceInfo_dev_user', to=settings.AUTH_USER_MODEL, verbose_name='Device User')),
                ('dev_ver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DeviceInfo_dev_ver', to='app_devices.deviceversion', verbose_name='Device Version')),
                ('esp_mac', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DeviceInfo_esp_mac', to='app_devices.espmacid', verbose_name='ESP MAC')),
            ],
            options={
                'verbose_name': '03. Device Detail',
                'verbose_name_plural': '03. Devices Details',
            },
        ),
        migrations.CreateModel(
            name='DeviceHeartbeat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hb_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Last HB time')),
                ('no_of_reboot', models.IntegerField(blank=True, default=0, null=True, verbose_name='Number of Reboot')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_info_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='DeviceHeartbeat_device_info_id', to='app_devices.deviceinfo', verbose_name='Device info id')),
            ],
            options={
                'verbose_name': '05. Device HB',
                'verbose_name_plural': '05. Device HBs',
            },
        ),
        migrations.CreateModel(
            name='ControlMotionCapture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmd_status', models.CharField(choices=[('processing', 'Processing'), ('done', 'Done')], default='done', max_length=30, verbose_name='CMD Status')),
                ('enable_or_disable_motion_capture', models.BooleanField(default=True, verbose_name='Is Motion Capture')),
                ('enable_or_disable_flash_light', models.BooleanField(default=True, verbose_name='Is Flash')),
                ('no_of_frame_capture_limit', models.IntegerField(default=33, verbose_name='Frame Limit')),
                ('vdo_frame_size', models.IntegerField(default=7, verbose_name='Frame Size')),
                ('active', models.BooleanField(default=True, verbose_name='CMD active status')),
                ('device_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ControlMotionCapture_device_id', to='app_devices.deviceinfo', verbose_name='Device ID')),
            ],
            options={
                'verbose_name': 'E. VDO Setting CMD',
                'verbose_name_plural': 'E. VDO Setting CMDs',
            },
        ),
        migrations.CreateModel(
            name='CloudIPDomainPortCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmd_status', models.CharField(choices=[('processing', 'Processing'), ('done', 'Done')], default='done', max_length=30, verbose_name='CMD Status')),
                ('cmd_name', models.CharField(max_length=30, verbose_name='CMD Name')),
                ('cloud_ip', models.CharField(default='192.168.9.99', max_length=30, verbose_name='Cloud IP')),
                ('cloud_domain', models.CharField(default='rokkhi.banglasolutions.com', max_length=100, verbose_name='Cloud Domain')),
                ('cloud_port', models.IntegerField(default=1234, verbose_name='Cloud Port')),
                ('active', models.BooleanField(default=True, verbose_name='CMD active status')),
                ('device_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='CloudIPDomainPortCommand_device_id', to='app_devices.deviceinfo', verbose_name='Device ID')),
            ],
            options={
                'verbose_name': 'H. Cloud IP Domain Port CMD',
                'verbose_name_plural': 'H. Cloud IP Domain Port CMDs',
            },
        ),
        migrations.CreateModel(
            name='CameraInitSettingCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmd_status', models.CharField(choices=[('processing', 'Processing'), ('done', 'Done')], default='done', max_length=30, verbose_name='CMD Status')),
                ('cmd_name', models.CharField(max_length=30, verbose_name='CMD Name')),
                ('cam_flip', models.BooleanField(default=True, verbose_name='Camera Flip')),
                ('cam_mirror', models.BooleanField(default=True, verbose_name='Camera Mirror')),
                ('active', models.BooleanField(default=True, verbose_name='CMD active status')),
                ('device_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='CameraInitSettingCommand_device_id', to='app_devices.deviceinfo', verbose_name='Device ID')),
            ],
            options={
                'verbose_name': 'F. Camera Init Setting CMD',
                'verbose_name_plural': 'F. Camera Init Setting CMDs',
            },
        ),
        migrations.CreateModel(
            name='DevTempLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_date_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Insert date time')),
                ('dev_temp', models.CharField(blank=True, max_length=10, null=True, verbose_name='Device Temperature')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_info_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DevTempLog_device_info_id', to='app_devices.deviceinfo', verbose_name='Device info id')),
            ],
            options={
                'verbose_name': 'J. Temperature Log',
                'verbose_name_plural': 'J. Temperature Logs',
            },
        ),
        migrations.CreateModel(
            name='HbDelayCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmd_status', models.CharField(choices=[('processing', 'Processing'), ('done', 'Done')], default='done', max_length=30, verbose_name='CMD Status')),
                ('cmd_name', models.CharField(max_length=30, verbose_name='CMD Name')),
                ('hb_delay', models.IntegerField(default=10, verbose_name='HB Delay')),
                ('active', models.BooleanField(default=True, verbose_name='CMD active status')),
                ('device_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='HbDelayCommand_device_id', to='app_devices.deviceinfo', verbose_name='Device ID')),
            ],
            options={
                'verbose_name': 'D. HB Delay CMD',
                'verbose_name_plural': 'D. HB Delay CMDs',
            },
        ),
        migrations.CreateModel(
            name='ImageCaptureCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flashlight', models.BooleanField(default=True, verbose_name='Flash')),
                ('cmd_status', models.CharField(choices=[('processing', 'Processing'), ('done', 'Done')], default='done', max_length=30, verbose_name='CMD Status')),
                ('active', models.BooleanField(default=True, verbose_name='CMD active status')),
                ('device_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ImageCaptureCommandForDevice_device_id', to='app_devices.deviceinfo', verbose_name='Device ID')),
                ('resolution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_devices.imageresolutionlist', verbose_name='Resolution')),
            ],
            options={
                'verbose_name': 'A. Photo Capture CMD',
                'verbose_name_plural': 'A. Photo Capture CMDs',
            },
        ),
        migrations.CreateModel(
            name='LightAlarmOffCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmd_status', models.CharField(choices=[('processing', 'Processing'), ('done', 'Done')], default='done', max_length=30, verbose_name='CMD Status')),
                ('active', models.BooleanField(default=True, verbose_name='CMD active status')),
                ('device_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='LightAlarmOffCommand_device_id', to='app_devices.deviceinfo', verbose_name='Device ID')),
            ],
            options={
                'verbose_name': 'C. Alarm OFF CMD',
                'verbose_name_plural': 'C. Alarm OFF CMDs',
            },
        ),
        migrations.CreateModel(
            name='LightAlarmOffLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_date_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Insert date time')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_info_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='LightAlarmOffLog_device_info_id', to='app_devices.deviceinfo', verbose_name='Device info id')),
            ],
            options={
                'verbose_name': '09. Alarm OFF Log',
                'verbose_name_plural': '09. Alarm OFF Logs',
            },
        ),
        migrations.CreateModel(
            name='LightAlarmOnCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmd_status', models.CharField(choices=[('processing', 'Processing'), ('done', 'Done')], default='done', max_length=30, verbose_name='CMD Status')),
                ('active', models.BooleanField(default=True, verbose_name='CMD active status')),
                ('device_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='LightAlarmOnCommand_device_id', to='app_devices.deviceinfo', verbose_name='Device ID')),
            ],
            options={
                'verbose_name': 'B. Alarm ON CMD',
                'verbose_name_plural': 'B. Alarm ON CMDs',
            },
        ),
        migrations.CreateModel(
            name='LightAlarmOnLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_date_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Insert date time')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_info_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='LightAlarmOnLog_device_info_id', to='app_devices.deviceinfo', verbose_name='Device info id')),
            ],
            options={
                'verbose_name': '08. Alarm ON Logs',
                'verbose_name_plural': '08. Alarm ON Logs',
            },
        ),
        migrations.CreateModel(
            name='ManualCapturedImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_date_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Insert date time')),
                ('image_size', models.IntegerField(blank=True, default=0, null=True, verbose_name='Image size')),
                ('image_path', models.ImageField(upload_to='', verbose_name='Image path')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_info_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ManualCapturedImage_device_info_id', to='app_devices.deviceinfo', verbose_name='Device info id')),
            ],
            options={
                'verbose_name': '06. Captured Photo',
                'verbose_name_plural': '06. Captured Photos',
            },
        ),
        migrations.CreateModel(
            name='MotionVideoFromDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_date_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Insert date time')),
                ('video_size', models.IntegerField(default=0, verbose_name='Size')),
                ('total_frame', models.IntegerField(default=0, verbose_name='Frames')),
                ('video_path', models.ImageField(upload_to='', verbose_name='Video Path')),
                ('is_detection_applied', models.BooleanField(default=False, verbose_name='Detection Applied')),
                ('is_motion_found', models.BooleanField(default=False, verbose_name='Is Motion')),
                ('motion_found_frame_no', models.IntegerField(default=0, verbose_name='Motion at Frame')),
                ('motion_found_frame_path', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Motion Path')),
                ('is_person_found', models.BooleanField(default=False, verbose_name='Is Person')),
                ('person_found_frame_no', models.IntegerField(default=0, verbose_name='Person at Frame')),
                ('person_found_frame_path', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Person Path')),
                ('is_alert_done', models.BooleanField(default=False, verbose_name='Is Alert Sent')),
                ('is_alert_snooze', models.BooleanField(default=False, verbose_name='Is Alert Snooze')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_info_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MotionVideoFromDevice_device_info_id', to='app_devices.deviceinfo', verbose_name='Device info id')),
            ],
            options={
                'verbose_name': '07. Captured VDO',
                'verbose_name_plural': '07. Captured VDOs',
            },
        ),
        migrations.CreateModel(
            name='ResetRebootCounterCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmd_status', models.CharField(choices=[('processing', 'Processing'), ('done', 'Done')], default='done', max_length=30, verbose_name='CMD Status')),
                ('cmd_name', models.CharField(max_length=30, verbose_name='CMD Name')),
                ('active', models.BooleanField(default=True, verbose_name='CMD active status')),
                ('device_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ResetRebootCounterCommand_device_id', to='app_devices.deviceinfo', verbose_name='Device ID')),
            ],
            options={
                'verbose_name': 'I. Reset Reboot Counter CMD',
                'verbose_name_plural': 'I. Reset Reboot Counter CMDs',
            },
        ),
        migrations.CreateModel(
            name='WiFiSSIDPassCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmd_status', models.CharField(choices=[('processing', 'Processing'), ('done', 'Done')], default='done', max_length=30, verbose_name='CMD Status')),
                ('cmd_name', models.CharField(max_length=30, verbose_name='CMD Name')),
                ('ssid', models.CharField(default='BS-Rokkhi', max_length=50, verbose_name='WiFi SSID')),
                ('password', models.CharField(default='Rokkhi-4231', max_length=50, verbose_name='WiFi Password')),
                ('active', models.BooleanField(default=True, verbose_name='CMD active status')),
                ('device_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='WiFiSSIDPassCommand_device_id', to='app_devices.deviceinfo', verbose_name='Device ID')),
            ],
            options={
                'verbose_name': 'G. WiFi SSID-Pass CMD',
                'verbose_name_plural': 'G. WiFi SSID-Pass CMDs',
            },
        ),
    ]
